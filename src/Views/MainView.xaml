<view:ViewBase x:Class="ERGLauncher.Views.MainView"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
               xmlns:prism="http://prismlibrary.com/"
               xmlns:gu="http://gu.se/Localization"
               xmlns:view="clr-namespace:ERGLauncher.Views"
               xmlns:components="clr-namespace:System.ComponentModel;assembly=WindowsBase"
               xmlns:metroDialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
               xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
               xmlns:interactivities="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
               xmlns:properties="clr-namespace:ERGLauncher.Properties"
               xmlns:core="clr-namespace:ERGLauncher.Core"
               mc:Ignorable="d"
               d:DesignHeight="250"
               d:DesignWidth="300"
               GlowBrush="{DynamicResource MahApps.Brushes.WindowTitle}"
               Title="{Binding Path=Title.Value,
                               Mode=OneWay,
                               UpdateSourceTrigger=PropertyChanged}"
               Height="{Binding Path=Height.Value,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}"
               Width="{Binding Path=Width.Value,
                               Mode=TwoWay,
                               UpdateSourceTrigger=PropertyChanged}"
               Top="{Binding Path=Top.Value,
                             Mode=TwoWay,
                             UpdateSourceTrigger=PropertyChanged}"
               Left="{Binding Path=Left.Value,
                              Mode=TwoWay,
                              UpdateSourceTrigger=PropertyChanged}"
               WindowState="{Binding Path=WindowState.Value,
                                     Mode=TwoWay,
                                     UpdateSourceTrigger=PropertyChanged}"
               MinHeight="250"
               MinWidth="300"
               SaveWindowPosition="True"
               prism:ViewModelLocator.AutoWireViewModel="True"
               metroDialog:DialogParticipation.Register="{Binding}">
    <view:ViewBase.Resources>
        <CollectionViewSource x:Key="SortedCollection"
                              Source="{Binding Path=Items,
                                               Mode=OneWay,
                                               UpdateSourceTrigger=PropertyChanged}">
            <CollectionViewSource.SortDescriptions>
                <components:SortDescription PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </view:ViewBase.Resources>

    <interactivities:Interaction.Triggers>
        <interactivities:EventTrigger EventName="Loaded">
            <interactivities:InvokeCommandAction Command="{Binding Path=LoadSettingAsyncCommand,
                                                                   Mode=OneWay,
                                                                   UpdateSourceTrigger=PropertyChanged}" />
        </interactivities:EventTrigger>

        <interactivities:EventTrigger EventName="Closing">
            <interactivities:InvokeCommandAction Command="{Binding Path=SaveAppSettingAsyncCommand,
                                                                   Mode=OneWay,
                                                                   UpdateSourceTrigger=PropertyChanged}" />
        </interactivities:EventTrigger>
    </interactivities:Interaction.Triggers>

    <view:ViewBase.ContextMenu>
        <ContextMenu>
            <MenuItem Header="{gu:Static properties:Resources.Add}"
                      Command="{Binding Path=AddItemAsyncCommand,
                                        Mode=OneWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                      Icon="{materialDesign:PackIcon Plus}" />

            <MenuItem Header="{gu:Static properties:Resources.Edit}"
                      Command="{Binding Path=EditItemAsyncCommand,
                                        Mode=OneWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                      Icon="{materialDesign:PackIcon FileEdit}" />

            <MenuItem Header="{gu:Static properties:Resources.Remove}"
                      Command="{Binding Path=RemoveItemAsyncCommand,
                                        Mode=OneWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                      Icon="{materialDesign:PackIcon Minus}" />

            <Separator />

            <MenuItem Header="{gu:Static properties:Resources.Setting}"
                      Command="{Binding Path=OpenSettingCommand,
                                        Mode=OneWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                      Icon="{materialDesign:PackIcon Cog}" />
        </ContextMenu>
    </view:ViewBase.ContextMenu>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Orientation="Horizontal">
            <Button Content="{materialDesign:PackIcon ArrowLeftBoldOutline}"
                    Command="{Binding Path=BackCommand,
                                      Mode=OneWay,
                                      UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource MaterialDesignFloatingActionLightButton}"
                    Foreground="{DynamicResource MahApps.Brushes.Text}"
                    Background="Transparent"
                    BorderBrush="Gray"
                    Margin="5"
                    Height="25"
                    Width="25"
                    IsTabStop="False"
                    ToolTip="{gu:Static properties:Resources.Back}" />

            <Button Content="{materialDesign:PackIcon ArrowRightBoldOutline}"
                    Command="{Binding Path=ForwardCommand,
                                      Mode=OneWay,
                                      UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource MaterialDesignFloatingActionLightButton}"
                    Foreground="{DynamicResource MahApps.Brushes.Text}"
                    Background="Transparent"
                    BorderBrush="Gray"
                    Margin="5"
                    Height="25"
                    Width="25"
                    IsTabStop="False"
                    ToolTip="{gu:Static properties:Resources.Forward}" />

            <TextBlock Text="{Binding Path=CurrentBrand.Value,
                                      Mode=OneWay,
                                      UpdateSourceTrigger=PropertyChanged}"
                       Foreground="{DynamicResource MahApps.Brushes.Text}"
                       VerticalAlignment="Center"
                       Margin="5" />
        </StackPanel>

        <ScrollViewer Grid.Row="1"
                      VerticalScrollBarVisibility="Auto"
                      materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True">
            <ListBox ItemsSource="{Binding Source={StaticResource SortedCollection}}"
                     SelectedItem="{Binding Path=SelectedItem.Value,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged}"
                     SelectionMode="Single"
                     IsTabStop="False"
                     FocusVisualStyle="{x:Null}">
                <interactivities:Interaction.Triggers>
                    <interactivities:EventTrigger EventName="MouseLeftButtonUp">
                        <interactivities:InvokeCommandAction Command="{Binding Path=SelectItemAsyncCommand}" />
                    </interactivities:EventTrigger>
                </interactivities:Interaction.Triggers>

                <ItemsControl.Template>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border>
                            <WrapPanel Margin="10"
                                       IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="100"
                              Width="100"
                              Margin="10"
                              ToolTip="{Binding Path=Name,
                                                Mode=OneWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                              d:DataContext="{d:DesignData Type={x:Type core:Item}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="3*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Image Grid.Row="0"
                                   Source="{Binding Path=Icon,
                                                    Mode=OneWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                   Height="70"
                                   Width="70"
                                   VerticalAlignment="Stretch"
                                   HorizontalAlignment="Stretch" />

                            <TextBlock Grid.Row="1"
                                       Text="{Binding Path=Name,
                                                      Mode=OneWay,
                                                      UpdateSourceTrigger=PropertyChanged}"
                                       Foreground="{DynamicResource MahApps.Brushes.Text}"
                                       FontSize="15"
                                       TextTrimming="CharacterEllipsis"
                                       TextAlignment="Center"
                                       TextWrapping="WrapWithOverflow"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Stretch" />
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="OverridesDefaultStyle"
                                Value="True" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderThickness="1"
                                            BorderBrush="{TemplateBinding BorderBrush}">
                                        <ContentPresenter IsHitTestVisible="True" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="IsTabStop"
                                Value="False" />

                        <Setter Property="FocusVisualStyle"
                                Value="{x:Null}" />

                        <Style.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="BorderBrush"
                                        Value="Gray" />
                            </Trigger>

                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="SlateGray" />
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                    <Condition Property="IsMouseOver"
                                               Value="True" />
                                </MultiTrigger.Conditions>

                                <Setter Property="Background"
                                        Value="SlateGray" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ListBox>
        </ScrollViewer>
    </Grid>
</view:ViewBase>
